.world-map-wrapper {
  width: min(90%, 1000px);
  margin: 0 auto;

  display: flex;
}

.world-map {
  margin: 0 auto;
  width: min(90%, 1000px);
}

.world-map figcaption {
  font-size: var(--font-size-500);
  text-align: center;
}

.world-map svg {
  display: block;
  margin: 0 auto;
}

.world-map-legend {
  width: 300px;
  height: 24px;
  border-radius: var(--border-radius-300);
  margin: 0 auto;
  margin-bottom: 20px;
  position: relative;
  color: var(--light-color);
}

.world-map-legend .legend-labels {
  width: 100%;
  height: 100%;
  text-align: center;
  line-height: 24px;

  padding: 0 var(--padding-500);

  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);

  display: flex;
  justify-content: space-between;
}

.updates {
  padding: var(--padding-300);

  border: var(--default-border);

  margin-bottom: var(--padding-300);

  border-radius: var(--border-radius-100);
}

/* <div className="table-wrapper">
        <div className="grid">
          <div className="grid-header">
            <div className="grid-header-title">Country</div>
            <div className="grid-header-subtitle">
              Expected Date of proposed changes
            </div>
          </div>
          <div className="grid-body">
            {upcomingTaxChangeDates.map((d) => (
              <div className="grid-item" key={d.country}>
                <div className="grid-item-title">{d.name}</div>
                <div className="grid-item-subtitle">
                  {new Date(d.date).toLocaleDateString("en-US", {
                    year: "numeric",
                    month: "long",
                    day: "numeric"
                  })}
                </div>
              </div>
            ))}
          </div>
        </div>
      </div> */

.grid {
  display: flex;
  flex-direction: column;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--padding-300);

  max-width: min(90%, 1000px);
  margin: 0 auto;

  margin-top: 20px;
}

.grid-header {
  display: flex;
  justify-content: space-between;
  align-items: center;

  background-color: var(--mid-color);
  border-radius: var(--border-radius-100);
  padding: var(--padding-300);
}

.grid-body {
  display: flex;
  flex-direction: column;
  gap: var(--padding-300);

  padding: var(--padding-300);
}

.grid-item {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;

  border-radius: var(--border-radius-100);

  border-bottom: var(--default-border);

  padding: var(--padding-300) 0;
  padding-top: calc(var(--padding-300) * 2);
}

textarea {
  min-height: 100px;
  padding: var(--padding-400);

  border: var(--default-border);
  border-radius: var(--border-radius-100);
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.spinner {
  background-color: var(--dark-color);
  width: 20px;
  height: 20px;

  margin: 10px;

  display: block;

  animation: spin 1s linear infinite;
}

.chat-wrapper {
  max-width: min(90%, 1000px);
  margin: 0 auto;
}

.chat-wrapper form {
  margin-top: var(--padding-800);
  padding: 0;
}
